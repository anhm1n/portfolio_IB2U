setwd("~/swagagsdg/Swag_stats/portfolio_IB2U")
library(dplyr)
library(ggplot2)
library(tidyr)
swim_groups <- read.csv("swimresults.csv", stringsAsFactors = F)
# Create a table on the conditional that the student passed
swim_pass <- filter(swim_groups, Pass == "Y")
swim_levels <- group_by(swim_groups, Level) %>%
summarize(average = mean(Age), count = n())
swim_pass_level_male <- swim_pass %>%
filter(Sex == "M") %>%
group_by(Level) %>%
summarize(count = n())
swim_pass_level_fem <- swim_pass %>%
filter(Sex == "F") %>%
group_by(Level) %>%
summarize(count = n())
swim_pass_array <- as.data.frame(full_join(by = "Level", swim_pass_level_male, swim_pass_level_fem))
swim_pass_array[is.na(swim_pass_array)] <- 0
swim_pass_array <- mutate(swim_pass_array, Percentage_Male = count.x / nrow(swim_pass),
Percentage_Fem = count.y / nrow(swim_pass))
colnames(swim_pass_array)[c(2, 3)] <- c("Count_Male", "Count_Fem")
write.csv(swim_pass_array, file = "SwimPassArray.csv")
#create data frames of 3 largest levels
y4 <- filter(swim_groups, Level == "Y4")
y3 <- filter(swim_groups, Level == "Y3")
p1 <- filter(swim_groups, Level == "P1")
# create plots to show distribution based on level and sex
ggplot(data = swim_groups) +
geom_histogram(mapping = aes(x = Age, fill = Level), binwidth = 1) +
scale_x_continuous(breaks = 1:16) +
scale_y_continuous(breaks = seq(0, 18, by=2)) +
labs(title = "Age Distribution of Students by Level")
ggplot(data = swim_groups) +
geom_histogram(mapping = aes(x = Age, fill = Sex), binwidth = 1) +
scale_x_continuous(breaks = 1:16) +
scale_y_continuous(breaks = seq(0, 18, by=2)) +
labs(title = "Age Distribution of Students by Sex")
ggplot(data = swim_groups) +
geom_boxplot(mapping = aes(x = Level, y = Age))
ggplot(data = swim_groups) +
geom_boxplot(mapping = aes(x = Level, y = Age, fill = Pass))
swim_main <- filter(swim_groups, Level == "Y4" | Level == "Y3" | Level == "P1")
ggplot(data = swim_main) +
geom_boxplot(mapping = aes(x = Level, y = Age, fill = Pass))
ggplot(data = swim_main) +
geom_boxplot(mapping = aes(x = Level, y = Age, fill = Pass)) +
coord_flip() +
labs(title = "Age Distribution by Passing")
ggplot(data = swim_main) +
geom_boxplot(mapping = aes(x = Level, y = Age, fill = Pass)) +
coord_flip() +
labs(title = "Age Distribution by Passing of Main Levels")
passOrFailReal <- select(swim_main, Pass)
y4_passes <- filter(passOrFailReal, Level == "Y4")
y4_passes <- as.vector(select(y4, Pass))
is.vector(y4_passes)
is.data.frame(y4_passes)
y4_passes <- y4[, "pass"]
y4_passes <- y4[, "Pass"]
is.vector(y4_passes)
y4_passes <- y4[, "Pass"]
y3_passes <- y3[, "Pass"]
p1_passes <- p1[, "Pass"]
permute_age <- function(df, diff_age, list_pass) {
passing <- sample(pass_list, size = nrow(df), replace = F)
simDF <- mutate(df, Pass = passing)
mean(simDF[simDF$Pass == "Y", "Age"], na.rm = T)
}
permute_age <- function(df, diff_age = F, list_pass) {
passing <- sample(pass_list, size = nrow(df), replace = F)
simDF <- mutate(df, Pass = passing)
mean(simDF[simDF$Pass == "Y", "Age"], na.rm = T)
}
permute_age(y4, y4_passes)
permute_age <- function(df, diff_age = F, list_pass) {
passing <- sample(list_pass, size = nrow(df), replace = F)
simDF <- mutate(df, Pass = passing)
mean(simDF[simDF$Pass == "Y", "Age"], na.rm = T)
}
permute_age(y4, y4_passes)
permute_age(df = y4, list_pass = y4_passes)
